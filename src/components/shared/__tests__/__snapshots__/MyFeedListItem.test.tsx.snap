// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Interaction should simulate onClick 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderRadius": 16,
            "flexDirection": "row",
            "height": 112,
            "justifyContent": "space-between",
            "marginTop": 10,
            "paddingBottom": 0,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 0,
            "shadowColor": "rgba(0, 0, 0, 0.12)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 6,
            "width": 332,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-start",
              "flexDirection": "column",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "color": "black",
              "fontSize": 14,
              "marginBottom": 6,
              "width": 180,
            }
          }
        />
      </View>
      <Image
        resizeMethod="resize"
        source={
          Object {
            "uri": undefined,
          }
        }
        style={
          Object {
            "borderRadius": 16,
            "height": 80,
            "width": 80,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Rendering renders without crashing 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffff",
            "borderRadius": 16,
            "flexDirection": "row",
            "height": 112,
            "justifyContent": "space-between",
            "marginTop": 10,
            "paddingBottom": 0,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 0,
            "shadowColor": "rgba(0, 0, 0, 0.12)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 1,
            "shadowRadius": 6,
            "width": 332,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-start",
              "flexDirection": "column",
              "justifyContent": "flex-start",
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "color": "black",
              "fontSize": 14,
              "marginBottom": 6,
              "width": 180,
            }
          }
        />
      </View>
      <Image
        resizeMethod="resize"
        source={
          Object {
            "uri": undefined,
          }
        }
        style={
          Object {
            "borderRadius": 16,
            "height": 80,
            "width": 80,
          }
        }
      />
    </View>
  </View>
</View>
`;
